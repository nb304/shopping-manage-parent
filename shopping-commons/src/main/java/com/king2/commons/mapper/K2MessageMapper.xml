<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.king2.commons.mapper.K2MessageMapper">
    <resultMap id="BaseResultMap" type="com.king2.commons.pojo.K2Message">
        <id column="message_id" property="messageId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="retain1" property="retain1" jdbcType="VARCHAR"/>
        <result column="retain2" property="retain2" jdbcType="VARCHAR"/>
        <result column="retain3" property="retain3" jdbcType="VARCHAR"/>
        <result column="retain4" property="retain4" jdbcType="VARCHAR"/>
        <result column="retain5" property="retain5" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.king2.commons.pojo.K2Message" extends="BaseResultMap">
        <result column="message_content" property="messageContent" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    message_id, create_time, user_id, state, retain1, retain2, retain3, retain4, retain5
  </sql>
    <sql id="Blob_Column_List">
    message_content
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="com.king2.commons.pojo.K2MessageExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from k2_message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.king2.commons.pojo.K2MessageExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from k2_message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from k2_message
        where message_id = #{messageId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from k2_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.king2.commons.pojo.K2MessageExample">
        delete from k2_message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.king2.commons.pojo.K2Message">
        insert into k2_message (message_id, create_time, user_id,
        state, retain1, retain2,
        retain3, retain4, retain5,
        message_content)
        values (#{messageId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER},
        #{state,jdbcType=INTEGER}, #{retain1,jdbcType=VARCHAR}, #{retain2,jdbcType=VARCHAR},
        #{retain3,jdbcType=VARCHAR}, #{retain4,jdbcType=VARCHAR}, #{retain5,jdbcType=VARCHAR},
        #{messageContent,jdbcType=LONGVARCHAR})

        <selectKey keyProperty="messageId" order="AFTER" resultType="int">select last_insert_id()</selectKey>
    </insert>
    <insert id="insertSelective" parameterType="com.king2.commons.pojo.K2Message">
        insert into k2_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                message_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="retain1 != null">
                retain1,
            </if>
            <if test="retain2 != null">
                retain2,
            </if>
            <if test="retain3 != null">
                retain3,
            </if>
            <if test="retain4 != null">
                retain4,
            </if>
            <if test="retain5 != null">
                retain5,
            </if>
            <if test="messageContent != null">
                message_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                #{messageId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="retain1 != null">
                #{retain1,jdbcType=VARCHAR},
            </if>
            <if test="retain2 != null">
                #{retain2,jdbcType=VARCHAR},
            </if>
            <if test="retain3 != null">
                #{retain3,jdbcType=VARCHAR},
            </if>
            <if test="retain4 != null">
                #{retain4,jdbcType=VARCHAR},
            </if>
            <if test="retain5 != null">
                #{retain5,jdbcType=VARCHAR},
            </if>
            <if test="messageContent != null">
                #{messageContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.king2.commons.pojo.K2MessageExample" resultType="java.lang.Integer">
        select count(*) from k2_message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update k2_message
        <set>
            <if test="record.messageId != null">
                message_id = #{record.messageId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=INTEGER},
            </if>
            <if test="record.retain1 != null">
                retain1 = #{record.retain1,jdbcType=VARCHAR},
            </if>
            <if test="record.retain2 != null">
                retain2 = #{record.retain2,jdbcType=VARCHAR},
            </if>
            <if test="record.retain3 != null">
                retain3 = #{record.retain3,jdbcType=VARCHAR},
            </if>
            <if test="record.retain4 != null">
                retain4 = #{record.retain4,jdbcType=VARCHAR},
            </if>
            <if test="record.retain5 != null">
                retain5 = #{record.retain5,jdbcType=VARCHAR},
            </if>
            <if test="record.messageContent != null">
                message_content = #{record.messageContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update k2_message
        set message_id = #{record.messageId,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        user_id = #{record.userId,jdbcType=INTEGER},
        state = #{record.state,jdbcType=INTEGER},
        retain1 = #{record.retain1,jdbcType=VARCHAR},
        retain2 = #{record.retain2,jdbcType=VARCHAR},
        retain3 = #{record.retain3,jdbcType=VARCHAR},
        retain4 = #{record.retain4,jdbcType=VARCHAR},
        retain5 = #{record.retain5,jdbcType=VARCHAR},
        message_content = #{record.messageContent,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update k2_message
        set message_id = #{record.messageId,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        user_id = #{record.userId,jdbcType=INTEGER},
        state = #{record.state,jdbcType=INTEGER},
        retain1 = #{record.retain1,jdbcType=VARCHAR},
        retain2 = #{record.retain2,jdbcType=VARCHAR},
        retain3 = #{record.retain3,jdbcType=VARCHAR},
        retain4 = #{record.retain4,jdbcType=VARCHAR},
        retain5 = #{record.retain5,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.king2.commons.pojo.K2Message">
        update k2_message
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="retain1 != null">
                retain1 = #{retain1,jdbcType=VARCHAR},
            </if>
            <if test="retain2 != null">
                retain2 = #{retain2,jdbcType=VARCHAR},
            </if>
            <if test="retain3 != null">
                retain3 = #{retain3,jdbcType=VARCHAR},
            </if>
            <if test="retain4 != null">
                retain4 = #{retain4,jdbcType=VARCHAR},
            </if>
            <if test="retain5 != null">
                retain5 = #{retain5,jdbcType=VARCHAR},
            </if>
            <if test="messageContent != null">
                message_content = #{messageContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where message_id = #{messageId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.king2.commons.pojo.K2Message">
    update k2_message
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      retain1 = #{retain1,jdbcType=VARCHAR},
      retain2 = #{retain2,jdbcType=VARCHAR},
      retain3 = #{retain3,jdbcType=VARCHAR},
      retain4 = #{retain4,jdbcType=VARCHAR},
      retain5 = #{retain5,jdbcType=VARCHAR},
      message_content = #{messageContent,jdbcType=LONGVARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.king2.commons.pojo.K2Message">
    update k2_message
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      retain1 = #{retain1,jdbcType=VARCHAR},
      retain2 = #{retain2,jdbcType=VARCHAR},
      retain3 = #{retain3,jdbcType=VARCHAR},
      retain4 = #{retain4,jdbcType=VARCHAR},
      retain5 = #{retain5,jdbcType=VARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>
